{"remainingRequest":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\src\\views\\tool\\build\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\src\\views\\tool\\build\\index.vue","mtime":1604921296392},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610095434840},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610095436639},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1611130414937},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610095434840},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1611634477624}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}