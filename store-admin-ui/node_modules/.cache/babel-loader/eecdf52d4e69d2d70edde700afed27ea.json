{"remainingRequest":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\src\\utils\\index.js","dependencies":[{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\src\\utils\\index.js","mtime":1604921296359},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610095434840},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610095436639},{"path":"C:\\Users\\admin\\IdeaProjects\\store\\store-admin-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1611130414937}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}